version: "3"

services:
  api-gateway:
    image: api-gateway
    env_file:
      - api-gateway/config.env
    ports:
      - 3001:3001
    networks:
      - ebmedsnet
    deploy:
      mode: replicated
      replicas: 1

  engine:
    # listens on port 3002 per default
    image: engine
    networks:
      - ebmedsnet
    env_file:
      - engine/config.env
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        max_failure_ratio: 0.3

  coaching:
    # listens on port 3003 per default
    image: coaching
    networks:
      - ebmedsnet
    env_file:
      - coaching/config.env
    deploy:
      mode: replicated
      replicas: 1

  clinical-datastore:
    # listens on port 3004 per default
    image: clinical-datastore
    networks:
      - ebmedsnet
    env_file:
      - clinical-datastore/config.env
    deploy:
      mode: replicated
      replicas: 1

  format-converter:
    # listens on port 3005 per default
    image: format-converter
    networks:
      - ebmedsnet
    env_file:
      - format-converter/config.env
    deploy:
      mode: replicated
      replicas: 4

  elasticsearch:
    # listens on port 9200 for REST API traffic and port 9300 for node communication when clustered
    image: elasticsearch
    environment:
       ES_JAVA_OPTS: "-Xms2g -Xmx2g"
       # disable X-Pack
       # see https://www.elastic.co/guide/en/x-pack/current/xpack-settings.html
       #     https://www.elastic.co/guide/en/x-pack/current/installing-xpack.html#xpack-enabling
       xpack.security.enabled: "false"
       xpack.monitoring.enabled: "false"
       xpack.graph.enabled: "false"
       xpack.watcher.enabled: "false"
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - ebmedsnet
    deploy:
        mode: replicated # should be global once clustered
        replicas: 1

  kibana:
    image: kibana
    volumes:
      - ./kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    networks:
      - ebmedsnet
    deploy:
      mode: replicated
      replicas: 1 # should be enough

  logstash:
      # listens on port 5000 for tcp input per default
      image: logstash
      volumes:
        - ./logstash/config:/usr/share/logstash/config
        - ./logstash/pipeline:/usr/share/logstash/pipeline
        - ./logstash/queue:/usr/share/logstash/data/queue
      environment:
        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        PATH_CONFIG: "/usr/share/logstash/pipeline"
      networks:
        - ebmedsnet
      deploy:
        mode: global

networks:
  ebmedsnet:

# docker network create --driver overlay ebmedsnet
# docker service create --name api-gateway --env-file config/api-gateway.env --constraint 'node.role == manager' --network ebmedsnet --publish 3001:3001 api-gateway
# docker service create --name engine --publish 3002:3002 --network ebmedsnet --env-file config/engine.env --replicas=4 --update-delay 10s --update-parallelism 1 engine
